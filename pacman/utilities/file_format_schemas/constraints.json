{
    "$schema": "http://json-schema.org/draft-04/schema#",
    
    "title": "A description of the constraints on placement/routing/etc. to be applied.",
    "type": "array",
    "items": {
        "description": "A constraint.",
        "oneOf": [
            {
                "description": "A vertex location constraint.",
                "type": "object",
                "properties": {
                    "type": {"type": "string", "pattern": "^location$"},
                    "vertex": {"type": "string"},
                    "location": {
                        "type": "array",
                        "items": [
                            {"type": "integer", "minimum": 0},
                            {"type": "integer", "minimum": 0}
                        ],
                        "additionalItems": false
                    }
                },
                "additionalProperties": false,
                "required": ["type", "vertex", "location"]
            },
            {
                "description": "A vertex resource constraint.",
                "type": "object",
                "properties": {
                    "type": {"type": "string", "pattern": "^resource$"},
                    "vertex": {"type": "string"},
                    "resource": {"type": "string"},
                    "range": {
                        "type": "array",
                        "items": [
                            {"type": "integer", "minimum": 0},
                            {"type": "integer", "minimum": 0}
                        ],
                        "additionalItems": false
                    }
                },
                "additionalProperties": false,
                "required": ["type", "vertex", "resource", "range"]
            },
            {
                "description": "Reserve a specified range of resources.",
                "type": "object",
                "properties": {
                    "type": {"type": "string", "pattern": "^reserve_resource$"},
                    "resource": {"type": "string"},
                    "reservation": {"$ref": "#/resources/resourceRange"},
                    "location": {
                        "oneOf": [
                            {"type": "null"},
                            {
                                "type": "array",
                                "items": [
                                    {"type": "integer", "minimum": 0},
                                    {"type": "integer", "minimum": 0}
                                ],
                                "additionalItems": false
                            }
                        ],
                        "default": null
                    }
                },
                "additionalProperties": false,
                "required": ["type", "resource", "reservation"]
            },
            {
                "description": "Specify the endpoint of a route to a specified vertex.",
                "type": "object",
                "properties": {
                    "type": {"type": "string", "pattern": "^route_endpoint$"},
                    "vertex": {"type": "string"},
                    "direction": {"$ref": "#/resources/direction"}
                },
                "additionalProperties": false,
                "required": ["type", "vertex", "direction"]
            },
            {
                "description": "Make sure a set of vertices are always placed on the same chip.",
                "type": "object",
                "properties": {
                    "type": {"type": "string", "pattern": "^same_chip$"},
                    "vertices": {
                        "type": "array",
                        "items": {"type": "string"},
                        "minItems": 2,
                        "uniqueItems": true
                    }
                },
                "additionalProperties": false,
                "required": ["type", "vertices"]
            },
            {
                "description": "If two vertices are placed on the same chip, they will share all resources.",
                "type": "object",
                "properties": {
                    "type": {"type": "string", "pattern": "^share_resources$"},
                    "vertices": {
                        "type": "array",
                        "items": {"type": "string"},
                        "minItems": 2,
                        "uniqueItems": true
                    }
                },
                "additionalProperties": false,
                "required": ["type", "vertices"]
            },
            {
                "description": "Make sure a each of the supplied sets of edges do not overlap.",
                "type": "object",
                "properties": {
                    "type": {"type": "string", "pattern": "^disjoint_routes$"},
                    "edges": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1,
                            "uniqueItems": true
                        },
                        "minItems": 2,
                        "uniqueItems": true
                    }
                },
                "additionalProperties": false,
                "required": ["type", "edges"]
            }
        ]
    },
    
    "resources": {
        "resourceRange": {
            "description": "A range a of resource to be consumed.",
            "type": "array",
            "items": [
                {"description": "Start of range (inclusive)", "type": "integer"},
                {"description": "End of range (exclusive)", "type": "integer"}
            ],
            "additionalItems": false
        },
        "link": {
            "description": "A chip-to-chip link.",
            "type": "string",
            "enum": [
                "east", "north_east", "north",
                "west", "south_west", "south"
            ]
        },
        "core": {
            "description": "A specific core.",
            "type": "string",
            "enum": [
                "core0", "core1", "core2", "core3",
                "core4", "core5", "core6", "core7",
                "core8", "core9", "core10", "core11",
                "core12", "core13", "core14", "core15",
                "core16", "core17"
            ]
        },
        "direction": {
            "description": "A chip-to-chip link or a specific core.",
            "oneOf": [
                {"$ref": "#/resources/link"},
                {"$ref": "#/resources/core"}
            ]
        }
    }
}

