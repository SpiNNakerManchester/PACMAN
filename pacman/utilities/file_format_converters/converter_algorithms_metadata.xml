<!--
# Copyright (c) 2017-2019 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->
<algorithms xmlns="https://github.com/SpiNNakerManchester/PACMAN"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="https://github.com/SpiNNakerManchester/PACMAN
			https://raw.githubusercontent.com/SpiNNakerManchester/PACMAN/master/pacman/operations/algorithms_metadata_schema.xsd">
    <algorithm name="ConvertToFilePlacement">
        <python_module>pacman.utilities.file_format_converters.convert_to_file_placement</python_module>
        <python_class>ConvertToFilePlacement</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>file_path</param_name>
                <param_type>FilePlacementFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>placements</param_name>
            <param_name>file_path</param_name>
        </required_inputs>
        <outputs>
            <param_type>FilePlacements</param_type>
            <param_type>MemoryVertexById</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ConvertToFileMachineGraph">
        <python_module>pacman.utilities.file_format_converters.convert_to_file_machine_graph</python_module>
        <python_class>ConvertToFileMachineGraph</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>plan_n_timesteps</param_name>
                <param_type>PlanNTimeSteps</param_type>
            </parameter>
            <parameter>
                <param_name>file_path</param_name>
                <param_type>FileMachineGraphFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>plan_n_timesteps</param_name>
            <param_name>file_path</param_name>
        </required_inputs>
        <outputs>
            <param_type>FileMachineGraph</param_type>
            <param_type>MemoryVertexById</param_type>
            <param_type>MemoryPartitionById</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ConvertToJavaMachine">
        <python_module>pacman.utilities.file_format_converters.convert_to_java_machine</python_module>
        <python_class>ConvertToJavaMachine</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>file_path</param_name>
                <param_type>JsonMachinePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>file_path</param_name>
        </required_inputs>
        <outputs>
            <param_type>JsonMachine</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ConvertToFileMachineGraphPureMulticast">
        <python_module>pacman.utilities.file_format_converters.convert_to_file_machine_graph_pure_multicast</python_module>
        <python_class>ConvertToFileMachineGraphPureMulticast</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
            <parameter>
                <param_name>plan_n_timesteps</param_name>
                <param_type>PlanNTimeSteps</param_type>
            </parameter>
            <parameter>
                <param_name>file_path</param_name>
                <param_type>FileMachineGraphFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine_graph</param_name>
            <param_name>plan_n_timesteps</param_name>
            <param_name>file_path</param_name>
        </required_inputs>
        <outputs>
            <param_type>FileMachineGraphPureMulticast</param_type>
            <param_type>MemoryVertexById</param_type>
            <param_type>MemoryPartitionById</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ConvertToFileCoreAllocation">
        <python_module>pacman.utilities.file_format_converters.convert_to_file_core_allocations</python_module>
        <python_class>ConvertToFileCoreAllocations</python_class>
        <input_definitions>
            <parameter>
                <param_name>placements</param_name>
                <param_type>MemoryPlacements</param_type>
            </parameter>
            <parameter>
                <param_name>file_path</param_name>
                <param_type>FileCoreAllocationsFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>placements</param_name>
            <param_name>file_path</param_name>
        </required_inputs>
        <outputs>
            <param_type>FileCoreAllocations</param_type>
            <param_type>MemoryVertexById</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ConvertToFileMachine">
        <python_module>pacman.utilities.file_format_converters.convert_to_file_machine</python_module>
        <python_class>ConvertToFileMachine</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryMachine</param_type>
            </parameter>
            <parameter>
                <param_name>file_path</param_name>
                <param_type>FileMachineFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>file_path</param_name>
        </required_inputs>
        <outputs>
            <param_type>FileMachine</param_type>
        </outputs>
    </algorithm>
    <algorithm name="CreateToFileConstraints">
        <python_module>pacman.utilities.file_format_converters.create_file_constraints</python_module>
        <python_class>CreateConstraintsToFile</python_class>
        <input_definitions>
            <parameter>
                <param_name>machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>machine_graph</param_name>
                <param_type>MemoryMachineGraph</param_type>
            </parameter>
             <parameter>
                <param_name>file_path</param_name>
                <param_type>FileConstraintsFilePath</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>machine</param_name>
            <param_name>machine_graph</param_name>
            <param_name>file_path</param_name>
        </required_inputs>
        <outputs>
            <param_type>FileConstraints</param_type>
            <param_type>MemoryVertexById</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ConvertToMemoryPlacements">
        <python_module>pacman.utilities.file_format_converters.convert_to_memory_placements</python_module>
        <python_class>ConvertToMemoryPlacements</python_class>
        <input_definitions>
            <parameter>
                <param_name>extended_machine</param_name>
                <param_type>MemoryExtendedMachine</param_type>
            </parameter>
            <parameter>
                <param_name>placements</param_name>
                <param_type>FilePlacements</param_type>
            </parameter>
            <parameter>
                <param_name>allocations</param_name>
                <param_type>FileCoreAllocations</param_type>
            </parameter>
            <parameter>
                <param_name>constraints</param_name>
                <param_type>FileConstraints</param_type>
            </parameter>
            <parameter>
                <param_name>vertex_by_id</param_name>
                <param_type>MemoryVertexById</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>extended_machine</param_name>
            <param_name>placements</param_name>
            <param_name>allocations</param_name>
            <param_name>constraints</param_name>
            <param_name>vertex_by_id</param_name>
        </required_inputs>
        <outputs>
            <param_type>MemoryPlacements</param_type>
        </outputs>
    </algorithm>
    <algorithm name="ConvertToMemoryMultiCastRoutingPaths">
        <python_module>pacman.utilities.file_format_converters.convert_to_memory_multi_cast_routing_paths</python_module>
        <python_class>ConvertToMemoryMultiCastRoutingPaths</python_class>
        <input_definitions>
            <parameter>
                <param_name>file_routing_paths</param_name>
                <param_type>FileRoutingPaths</param_type>
            </parameter>
            <parameter>
                <param_name>partition_by_id</param_name>
                <param_type>MemoryPartitionById</param_type>
            </parameter>
        </input_definitions>
        <required_inputs>
            <param_name>file_routing_paths</param_name>
            <param_name>partition_by_id</param_name>
        </required_inputs>
        <outputs>
            <param_type>MemoryRoutingTableByPartition</param_type>
        </outputs>
    </algorithm>
</algorithms>